con=url("http://bowtie-bio.sourceforge.net/recount/ExpressionSets/bodymap_eset.RData")
load(file=con)
close(con)
bm = bodymap.eset
bm
exp_data = exprs(bm)
dim(exp_data)
head(exp_data,n=5)
knitr::opts_chunk$set(echo = TRUE)
library(airway)
indir<- system.file("extdata", package = "airway", mustWork = TRUE)
list.files(indir)
csvfile <- file.path(indir, "sample_table.csv")
sampleTable <- read.csv(csvfile, row.names=1)
sampleTable
filenames <- file.path(indir, paste0(sampleTable$Run,"_subset.bam"))
file.exists(filenames)
library(Rsamtools)
bamfiles <- BamFileList(filenames, yieldSize = 2000000)
seqinfo(bamfiles[1])
library("GenomicFeatures")
library("GenomicAlignments")
library("BiocParallel")
gtffile <- file.path(indir, "Homo_sapiens.GRCh37.75_subset.gtf")
txdb <- makeTxDbFromGFF(gtffile, format = "gtf", circ_seqs = character())
txdb
ebg <- exonsBy(txdb, by = "gene")
ebg
register(SerialParam())
se <- summarizeOverlaps(features = ebg, reads = bamfiles,
mode = "Union",
singleEnd = FALSE,
ignore.strand = TRUE,
fragments = TRUE)
se
dim(se)
assayNames(se)
head(assay(se),3)
colSums(assay(se))
rowRanges(se)
str(metadata(rowRanges(se)))
colData(se)
colData(se) <- DataFrame(sampleTable)
colData(se)
se$cell
se$dex
# Convert the 'dex' variable to a factor
se$dex <- factor(se$dex)
# Set the reference level for the 'dex' variable
se$dex <- relevel(se$dex, ref = "untrt")
se$dex
data("airway")
se <- airway
library(magrittr)
se$dex %<>% relevel ("untrt")
se$dex
round(colSums(assay(se))/1e6, 1)
colData(se)
library("DESeq2")
dds <- DESeqDataSet(se, design = ~cell + dex)
colData(dds)
countdata <- assay(se)
head(countdata,3)
coldata <- colData(se)
coldata
ddsMat <- DESeqDataSetFromMatrix(countData = countdata,
colData = coldata,
design = ~cell + dex)
head(ddsMat,3)
library("edgeR")
genetable <- data.frame(gene.id = rownames(se))
dge <- DGEList(counts = countdata,
samples = coldata,
genes = genetable)
names(dge)
nrow(dds)
dds <- dds[rowSums(counts(dds))>1,]
nrow(dds)
dge <- dge[rowSums(dge$counts)>1,]
all(rownames(dge) == rownames(dds))
nrow(dge)
rld <- rlog(dds, blind = FALSE) #use dds from SummarizedExperiment class
head(assay(rld), 3)
library("vsn")
meanSdPlot(assay(rld), ranks = FALSE)
vsd <- vst(dds, blind = FALSE)
head(assay(vsd),3)
meanSdPlot(assay(vsd), ranks = FALSE)
suppressPackageStartupMessages({
library(devtools)
library(Biobase)
})
library(devtools)
library(Biobase)
con=url("http://bowtie-bio.sourceforge.net/recount/ExpressionSets/bodymap_eset.RData")
load(file=con)
close(con)
bm = bodymap.eset
bm
exp_data = exprs(bm)
dim(exp_data)
head(exp_data,n=5)
pheno_data = pData(bm)
dim(pheno_data)
head(pheno_data)
feature_data = fData(bm)
dim(fData(bodymap.eset))
fData(bodymap.eset)[1:10,,1]
devtools::session_info()
knitr::opts_chunk$set(echo = TRUE)
```{r load}
library(devtools)
library(Biobase)
con=url("https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE52778&format=file&file=GSE52778%5FAll%5FSample%5FFPKM%5FMatrix%2Etxt%2Egz")
load(file=con)
con=url("https://ftp.ncbi.nlm.nih.gov/geo/series/GSE52nnn/GSE52778/matrix/")
load(file=con)
feature_data = fData(bm)
dim(fData(bodymap.eset))
fData(bodymap.eset)[1:10,,1]
devtools::session_info()
knitr::opts_chunk$set(echo = TRUE)
SBPAdultMale.df <- read.table(textConnection(" Subject
SBP
SBPAM01 SBPAM02 SBPAM03 SBPAM04 SBPAM05 SBPAM06 SBPAM07 SBPAM08 SBPAM09 SBPAM10 SBPAM11 SBPAM12 SBPAM13 SBPAM14 SBPAM15 SBPAM16 SBPAM17 SBPAM18 SBPAM19 SBPAM20
R Input getwd()
ls()
106 104 114 118 102 112 100 108 116 108 112 106 114 116 108 118 100 102 120
114"), header=TRUE)
SBPAdultMale.df <- read.table(textConnection(" Subject SBP
SBPAM01
SBPAM02
SBPAM04
SBPAM05
SBPAM06
SBPAM07
SBPAM08
SBPAM09
SBPAM10
SBPAM11
SBPAM12 SBPAM13 SBPAM14 SBPAM15 SBPAM16 SBPAM17 SBPAM18 SBPAM19 SBPAM20
106 104 114 118 102 112 100 108 116 108 112 106 114 116 108 118 100 102 120
114"), header=TRUE)
SBPAdultMale.df <- read.table(textConnection(" Subject SBP
SBPAM01 106
SBPAM02 104
SBPAM04 114
SBPAM05 118
SBPAM06 102
SBPAM07 112
SBPAM08 100
SBPAM09 108
SBPAM10 116
SBPAM11 108
SBPAM12 112
SBPAM13 106
SBPAM14 114
SBPAM15 116
SBPAM16 108
SBPAM17 118
SBPAM18 100
SBPAM19 102
SBPAM20 120"), header=TRUE)
getwd()
attach(SBPAdultMale.df)
str(SBPAdultMale.df)
SBPAdultMale.df <- read.table(textConnection(" Subject SBP
SBPAM01 106
SBPAM02 104
SBPAM03 114
SBPAM04 114
SBPAM05 118
SBPAM06 102
SBPAM07 112
SBPAM08 100
SBPAM09 108
SBPAM10 116
SBPAM11 108
SBPAM12 112
SBPAM13 106
SBPAM14 114
SBPAM15 116
SBPAM16 108
SBPAM17 118
SBPAM18 100
SBPAM19 102
SBPAM20 120"), header=TRUE)
attach(SBPAdultMale.df)
str(SBPAdultMale.df)
head(SBPAdultMale.df, n=5)
summary(SBPAdultMale.df)
par(ask=TRUE)
plot(density(SBPAdultMale.df$SBP, na.rm=TRUE), main="Systolic Blood Pressure of Selected Adult Males: Quality Assurance Density Plot", col="red", lwd=5)
knitr::opts_chunk$set(echo = TRUE)
library(Biobase)
library(dendextend)
con =url("http://bowtie-bio.sourceforge.net/recount/ExpressionSets/montpick_eset.RData")
load(file=con)
pdata=pData(montpick.eset)
edata=as.data.frame(exprs(montpick.eset))
fdata = fData(montpick.eset)
ls()
#Cek distribusi data
dist1 = dist(t(edata))
dist1
#Buat heatmap
colramp = colorRampPalette(c(8,"white",18))(9)
heatmap(as.matrix(dist1),col=colramp,Colv=NA,Rowv=NA)
#Cluster Dendrogram
hclust1 = hclust(dist1)
hclust1
plot(hclust1)
plot(hclust1,hang=-1)
#Buat dendrogram
dend = as.dendrogram(hclust1)
dend = color_labels(hclust1,4,col=1:4)
plot(dend)
#Cutree
plot(cutree(dend, k=2, h=5))
kmeans1 = kmeans(edata,centers=3)
names(kmeans1)
matplot(t(kmeans1$centers),col=1:3,type="l",lwd=3)
# cek berapa banyak gen di masing2 cluster
table(kmeans1$cluster)
# cek cluster mana yang dikasih ke setiap gen
kmeans1$cluster[1:15]
#Heatmap dengan cluster yang sudah disortir
heatmap(as.matrix(edata)[order(kmeans1$cluster),],col=colramp,Colv=NA,Rowv=NA)
knitr::opts_chunk$set(echo = TRUE)
library(Biobase)
library(dendextend)
con =url("http://bowtie-bio.sourceforge.net/recount/ExpressionSets/montpick_eset.RData")
load(file=con)
pdata=pData(montpick.eset)
edata=as.data.frame(exprs(montpick.eset))
fdata = fData(montpick.eset)
ls()
#Cek distribusi data
dist1 = dist(t(edata))
dist1
#Buat heatmap
colramp = colorRampPalette(c(8,"white",18))(9)
heatmap(as.matrix(dist1),col=colramp,Colv=NA,Rowv=NA)
#Cluster Dendrogram
hclust1 = hclust(dist1)
hclust1
plot(hclust1)
plot(hclust1,hang=-1)
#Buat dendrogram
dend = as.dendrogram(hclust1)
dend = color_labels(hclust1,4,col=1:4)
plot(dend)
#Cutree
plot(cutree(dend, k=2, h=5))
kmeans1 = kmeans(edata,centers=3)
names(kmeans1)
matplot(t(kmeans1$centers),col=1:3,type="l",lwd=3)
# cek berapa banyak gen di masing2 cluster
table(kmeans1$cluster)
# cek cluster mana yang dikasih ke setiap gen
kmeans1$cluster[1:15]
#Heatmap dengan cluster yang sudah disortir
heatmap(as.matrix(edata)[order(kmeans1$cluster),],col=colramp,Colv=NA,Rowv=NA)
summary(fdata)
par(ask=TRUE)
plot(density(fdata, na.rm=TRUE), main="oke", col="red", lwd=5)
par(ask=TRUE)
plot(density(fdata$gene, na.rm=TRUE), main="oke", col="red", lwd=5)
head(fdata, n=5)
knitr::opts_chunk$set(echo = TRUE)
library(Biobase)
library(dendextend)
con =url("http://bowtie-bio.sourceforge.net/recount/ExpressionSets/montpick_eset.RData")
load(file=con)
pdata=pData(montpick.eset)
edata=as.data.frame(exprs(montpick.eset))
fdata = fData(montpick.eset)
ls()
#Cek distribusi data
dist1 = dist(t(edata))
dist1
#Buat heatmap
colramp = colorRampPalette(c(8,"white",18))(9)
heatmap(as.matrix(dist1),col=colramp,Colv=NA,Rowv=NA)
#Cluster Dendrogram
hclust1 = hclust(dist1)
hclust1
plot(hclust1)
plot(hclust1,hang=-1)
#Buat dendrogram
dend = as.dendrogram(hclust1)
dend = color_labels(hclust1,4,col=1:4)
plot(dend)
#Cutree
plot(cutree(dend, k=2, h=5))
kmeans1 = kmeans(edata,centers=3)
names(kmeans1)
matplot(t(kmeans1$centers),col=1:3,type="l",lwd=3)
# cek berapa banyak gen di masing2 cluster
table(kmeans1$cluster)
# cek cluster mana yang dikasih ke setiap gen
kmeans1$cluster[1:15]
#Heatmap dengan cluster yang sudah disortir
heatmap(as.matrix(edata)[order(kmeans1$cluster),],col=colramp,Colv=NA,Rowv=NA)
par(ask=TRUE)
plot(density(SoilYield.df$BUperAcre, na.rm=TRUE), main="Corn Yield (Bushels per Acre) for Different Soils from 1997 to 2016 at a Selected Midwestern
Region: Quality Assurance Density Plot", col="red", lwd=5)
head(edata, n=5)
str(edata)
summary(edata)
par(ask=TRUE)
plot(density(edata$NA06985, na.rm=TRUE), main="Gene expression", col="red", lwd=5)
par(ask=TRUE)
plot(density(edata$NA06985, na.rm=TRUE), main="Gene expression", col="red", lwd=5)
BirthWeightGrams <- round(rnorm(1000, mean=3500, sd=450))
set.seed(8)
BirthWeightGrams <- round(rnorm(1000, mean=3500, sd=450))
head(BirthWeightGrams)
tail(BirthWeightGrams)
mean(BirthWeightGrams)
sd(BirthWeightGrams)
median(BirthWeightGrams)
min(BirthWeightGrams)
max(BirthWeightGrams)
summary(BirthWeightGrams)
par(ask=TRUE)
par(mfrow=c(2,2))
hist(BirthWeightGrams)
breaks=25,
par(ask=TRUE)
par(ask=TRUE)
par(ask=TRUE)
par(ask=TRUE)
par(mfrow=c(2,2))
hist(BirthWeightGrams)
breaks=25,
hist(BirthWeightGrams,
breaks=50,
main="Distribution of Infant Birth Weight(g)",
col="red",
xlab="Infant Birth Weight(g)",
ylab = "Count",
font.axis=2,
font.lab=2)
hist(BirthWeightGrams,
breaks=50,
main="Distribution of Infant Birth Weight(g)",
col="red",
xlab="Infant Birth Weight(g)",
ylab = "Count",
font.axis=2,
font.lab=2,
cex.main=1.75,
cex.lab=1.25,
xlim=c(0,6000),
ylim=c(0,1000))
hist(BirthWeightGrams)
hist(BirthWeightGrams,
breaks=25,
main="Distribution of Infant Birth Weight(g)",
col="red",
xlab="Infant Birth Weight(g)",
ylab = "Count")
breaks=50,
hist(BirthWeightGrams,
breaks=50,
main="Distribution of Infant Birth Weight(g)",
col="red",
xlab="Infant Birth Weight(g)",
ylab = "Count",
font.axis=2,
font.lab=2,
cex.main=1.75,
cex.lab=1.25,
xlim=c(0,6000),
ylim=c(0,1000))
install.packages("ggmosaic")
install.packages("gridEXTRA")
y
yes
install.packages("gridExtra")
install.packages("gridExtra")
install.packages("grid")
install.packages("scales")
install.packages("scales")
ggplotSorghum1 <ggplot2::ggplot(Sorghum.df,
aes(x=BUperAcre)) +
geom_density(alpha = 0.5) +
ggtitle("Sorghum Yield -- ggplot Simple") +
xlab("Yield") +
ylab("Density\n") +
theme_few() +
theme(legend.position="none")
Sorghum.df<- readxl::read_excel("Sorghum2012to2016.xlsx", 1)
setwd("C:/Users/linan/Documents/GitHub/project/R-project/using-r-for-biostatistics")
Sorghum.df<- readxl::read_excel("Sorghum2012to2016.xlsx", 1)
ggplotSorghum1 <ggplot2::ggplot(Sorghum.df,
aes(x=BUperAcre)) +
geom_density(alpha = 0.5) +
ggtitle("Sorghum Yield -- ggplot Simple") +
xlab("Yield") +
ylab("Density\n") +
theme_few() +
theme(legend.position="none")
Sorghum.df<- readxl::read_excel("Sorghum2012to2016.xlsx", 1)
ggplotSorghum1 <ggplot2::ggplot(Sorghum.df,
aes(x=BUperAcre)) +
geom_density(alpha = 0.5) +
ggtitle("Sorghum Yield -- ggplot Simple") +
xlab("Yield") +
ylab("Density\n") +
theme_few() +
theme(legend.position="none")
summary(Sorghum.df)
View(SBPAdultMale.df)
ggplotSorghum1 <ggplot2::ggplot(Sorghum.df,
aes(x=BUperAcre)) +
geom_density(alpha = 0.5) +
ggtitle("Sorghum Yield -- ggplot Simple") +
xlab("Yield") +
ylab("Density\n") +
theme_few() +
theme(legend.position="none")
ggplotSorghum <ggplot2::ggplot(Sorghum.df,
aes(x=BUperAcre)) +
geom_density(alpha = 0.5) +
ggtitle("Sorghum Yield -- ggplot Simple") +
xlab("Yield") +
ylab("Density\n") +
theme_few() +
theme(legend.position="none")
ggplotSorghum <
ggplot2::ggplot(Sorghum.df,
aes(x=BUperAcre)) +
geom_density(alpha = 0.5) +
ggtitle("Sorghum Yield -- ggplot Simple") +
xlab("Yield") +
ylab("Density\n") +
theme_few() +
theme(legend.position="none")
ggplotSorghum <
ggplot2::ggplot(Sorghum.df,
aes(x=BUperAcre)) +
geom_density(alpha = 0.5) +
ggtitle("Sorghum Yield -- ggplot Simple") +
xlab("Yield") +
ylab("Density\n") +
theme_few() +
theme(legend.position="none")
ggplotSorghum <
ggplot2::ggplot(Sorghum.df,
aes(x=BUperAcre)) +
geom_density(alpha = 0.5) +
ggtitle("Sorghum Yield -- ggplot Simple") +
xlab("Yield") +
ylab("Density\n") +
theme_few() +
theme(legend.position="none")
ggplot2::ggplot(Sorghum.df,
aes(x=BUperAcre)) +
geom_density(alpha = 0.5) +
ggtitle("Sorghum Yield -- ggplot Simple") +
xlab("Yield") +
ylab("Density\n") +
theme_few() +
theme(legend.position="none")
ggplotSorghum <
ggplot2::ggplot(Sorghum.df,
aes(x=BUperAcre)) +
geom_density(alpha = 0.5) +
ggtitle("Sorghum Yield -- ggplot Simple") +
xlab("Yield") +
ylab("Density\n") +
theme_few() +
theme(legend.position="none")
ggplotSorghum <
ggplot2::ggplot(Sorghum.df,
aes(x=BUperAcre)) +
geom_density(alpha = 0.5) +
ggtitle("Sorghum Yield -- ggplot Simple") +
xlab("Yield") +
ylab("Density\n") +
theme_few() +
theme(legend.position="none")
ggplotSorghum <
ggplot2::ggplot(Sorghum.df,
aes(x=BUperAcre)) +
geom_density(alpha = 0.5) +
ggtitle("Sorghum Yield -- ggplot Simple") +
xlab("Yield") +
ylab("Density\n") +
theme_few() +
theme(legend.position="none")
ggplotSorghum <
ggplot2::ggplot(Sorghum.df,
aes(x=BUperAcre)) +
geom_density(alpha = 0.5) +
ggtitle("Sorghum Yield -- ggplot Simple") +
xlab("Yield") +
ylab("Density\n") +
theme_few() +
theme(legend.position="none")
head(BirthWeightGrams)
ggplotSorghum <
ggplot2::ggplot(Sorghum.df,
aes(x=BUperAcre)) +
geom_density(alpha = 0.5) +
ggtitle("Sorghum Yield -- ggplot Simple") +
xlab("Yield") +
ylab("Density\n") +
theme_few() +
theme(legend.position="none")
